# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  merge_request: 
      branches: 

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  clone_and_run:
    # The type of runner that the job will run on
    runs-on: python3

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.x
          
      # Git clone
      - name: Git clone
        run: |
          clone
          cd
          python sprint1.py

      - name: Install dependencies
        run: |
          pip install -r requirements.txt  # from student

      - name: Run student notebook
        if: ${{ env.SPRINT == '1' }}
        run: |
          jupyter nbconvert --execute eda.ipynb
          print("Successfully executed.")

      - name: Run student python file
        if: ${{ env.SPRINT == '2' or env.SPRINT == '3'}}
        run: |
          python main.py
          print("Successfully executed.")

        #How to write the part where execution fails then run another script to send email?
        
      - name: Check code
        id: code-check
        run: |
          if [ -f fail.py ]; then
            python fail.py
            exit 1
          fi

  code_evaluation:
    runs-on: our docker image

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
            
      - name: Run EDA eval
        run: |
          python sprint${{env.SPRINT}}.py
      - name: Send email
        run: |
        

